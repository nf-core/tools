name: nf-core Docker push (release)
# This builds the docker image and pushes it to DockerHub
# Runs on nf-core repo releases
on:
  release:
    types: [published]

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  push_dockerhub:
    name: Push new Docker image to Docker Hub (release)
    runs-on: ubuntu-latest
    # Only run for the nf-core repo, for releases and merged PRs
    if: ${{ github.repository == 'nf-core/tools' }}
    env:
      TARGET_PLATFORM: "linux/amd64,linux/arm64"
    strategy:
      fail-fast: false
    steps:
      - name: Check out code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Set up QEMU for multi-architecture build
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3

      - name: Log in to Docker Hub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASS }}

      - name: Build and push nfcore/tools docker image (latest)
        run: |
          docker buildx build \
           --platform ${{ env.TARGET_PLATFORM }} \
           -t nfcore/tools:${{ github.event.release.tag_name }} \
           -t nfcore/tools:latest \
           --push --no-cache .

      - name: Build nfcore/devcontainer:latest devcontainer image
        uses: devcontainers/ci@8bf61b26e9c3a98f69cb6ce2f88d24ff59b785c6 # v0.3
        with:
          configFile: .devcontainer/build-devcontainer/devcontainer.json
          imageName: nfcore/devcontainer
          imageTag: ${{ github.event.release.tag_name }},latest
          platform: ${{ env.TARGET_PLATFORM }}
          push: always
          noCache: true
