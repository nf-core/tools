name: Sync template
on:
  # release:
  #   types: [published]
  workflow_dispatch:
    inputs:
      testpipeline:
        type: boolean
        description: Only run on nf-core/testpipeline?
        required: true
      runners:
        description: "Runners to test on"
        type: choice
        options:
          - "ubuntu-latest"
          - "self-hosted"
        default: "self-hosted"
      force_pr:
        description: "Force a PR to be created"
        type: boolean
        default: false
      pipeline:
        description: "Pipeline to sync"
        type: string
        default: "all"

# Cancel if a newer run is started
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  get-pipelines:
    runs-on: "ubuntu-latest"
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          if [ "${{ github.event.inputs.testpipeline }}" == "true" ]; then
            echo '{"pipeline":["testpipeline"]}' > pipeline_names.json
          elif [ "${{ github.event.inputs.pipeline }}" != "all" ] && [ "${{ github.event.inputs.pipeline }}" != "" ]; then
            curl -O https://nf-co.re/pipeline_names.json
            # check if the pipeline exists
            if ! grep -q "\"${{ github.event.inputs.pipeline }}\"" pipeline_names.json; then
              echo "Pipeline ${{ github.event.inputs.pipeline }} does not exist"
              exit 1
            fi
            echo '{"pipeline":["${{ github.event.inputs.pipeline }}"]}' > pipeline_names.json
          else
            curl -O https://nf-co.re/pipeline_names.json
          fi
          echo "matrix=$(cat pipeline_names.json)" >> $GITHUB_OUTPUT

  sync:
    needs: get-pipelines
    # use the github runner on release otherwise use the runner given by the input if it is dispatched manually, run on github if it is a rerun or on self-hosted by default
    runs-on: ${{github.event_name == 'release' && 'self-hosted' || github.event.inputs.runners || github.run_number > 1 && 'ubuntu-latest' || 'self-hosted' }}
    strategy:
      matrix: ${{fromJson(needs.get-pipelines.outputs.matrix)}}
      fail-fast: false
    steps:
      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
        name: Check out nf-core/tools

      - uses: actions/checkout@eef61447b9ff4aafe5dcd4e0bbf5d482be7e7871 # v4
        name: Check out nf-core/${{ matrix.pipeline }}
        with:
          repository: nf-core/${{ matrix.pipeline }}
          ref: dev
          token: ${{ secrets.nf_core_bot_auth_token }}
          path: nf-core/${{ matrix.pipeline }}
          fetch-depth: "0"

      - name: Set up Python 3.12
        uses: actions/setup-python@f677139bbe7f9c59b41e40162b753c062f5d49a3 # v5
        with:
          python-version: "3.12"

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Install Nextflow
        uses: nf-core/setup-nextflow@v2
        with:
          version: "latest-everything"

      - name: Run synchronisation
        if: github.repository == 'nf-core/tools'
        env:
          GITHUB_AUTH_TOKEN: ${{ secrets.nf_core_bot_auth_token }}
        run: |
          git config --global user.email "core@nf-co.re"
          git config --global user.name "nf-core-bot"
          nf-core --log-file sync_log_${{ matrix.pipeline }}.txt pipelines sync -d nf-core/${{ matrix.pipeline }} \
            --from-branch dev \
            --pull-request \
            --username nf-core-bot \
            --github-repository nf-core/${{ matrix.pipeline }}

      - name: Upload sync log file artifact
        if: ${{ always() }}
        uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4
        with:
          name: sync_log_${{ matrix.pipeline }}
          path: sync_log_${{ matrix.pipeline }}.txt
